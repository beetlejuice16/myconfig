return {
    "epwalsh/obsidian.nvim",
    version = "*", -- recommended, use latest release instead of latest commit
    lazy = true,
    ft = "markdown",
    -- Replace the above line with this if you only want to load obsidian.nvim for markdown files in your vault:
    -- event = {
    --     -- If you want to use the home shortcut '~' here you need to call 'vim.fn.expand'.
    --     -- E.g. "BufReadPre " .. vim.fn.expand "~" .. "/my-vault/**.md"
    --     "BufReadPre " .. vim.fn.expand("~") .. "/regnology/**.md",
    --     "BufNewFile " .. vim.fn.expand("~") .. "/regnology/**.md",
    -- },
    dependencies = {
        "nvim-lua/plenary.nvim",
    },
    completion = {
        -- Set to false to disable completion.
        nvim_cmp = true,
        -- Trigger completion at 2 chars.
        min_chars = 0,
    },
    opts = {
{% if yadm.class == "work" %}
        workspaces = {
            {
                name = "Work",
                path = "~/regnology",
            },
        },
        daily_notes = {
            folder = "Daily",
        },
{% else %}
        workspaces = {
            {
                name = "Central_Perk",
                path = "~/vaults/Central_Perk",
            },
        },
        daily_notes = {
            folder = "00 Zettelkasten-Metainfo/Daily_Notes",
            template = "00 Zettelkasten-Metainfo/_Templates/Daily.md"
        },

{% endif %}
        -- Optional, boolean or a function that takes a filename and returns a boolean.
        -- `true` indicates that you don't want obsidian.nvim to manage frontmatter.
        disable_frontmatter = true,

        -- Optional, alternatively you can customize the frontmatter data.
        -- -@return table
        -- note_frontmatter_func = function(note)
        --     -- Add the title of the note as an alias.
        --     if note.title then
        --         note:add_alias(note.title)
        --     end
        --
        --     local out = { id = note.id, aliases = note.aliases, tags = note.tags }
        --
        --     -- `note.metadata` contains any manually added fields in the frontmatter.
        --     -- So here we just make sure those fields are kept in the frontmatter.
        --     if note.metadata ~= nil and not vim.tbl_isempty(note.metadata) then
        --         for k, v in pairs(note.metadata) do
        --             out[k] = v
        --         end
        --     end
        --
        --     return out
        -- end,
    },
}
